{"ast":null,"code":"import { CREATE_PRODUCT, RETRIEVE_PRODUCTS, UPDATE_PRODUCT } from \"./type\";\nimport ProductDataService from \"../services/product.service\";\nexport const createProduct = (title, price, description, category, image, quantity) => async dispatch => {\n  try {\n    const res = await ProductDataService.create({\n      title,\n      price,\n      description,\n      category,\n      image,\n      quantity\n    });\n    dispatch({\n      type: CREATE_PRODUCT,\n      payload: res.data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\nexport const retrieveProducts = () => async dispatch => {\n  try {\n    const res = await ProductDataService.getAll();\n    dispatch({\n      type: RETRIEVE_PRODUCTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateProduct = (id, data) => async dispatch => {\n  try {\n    const res = await ProductDataService.update(id, data);\n    dispatch({\n      type: UPDATE_PRODUCT,\n      payload: data\n    });\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};","map":{"version":3,"sources":["/home/meowmeowplus/Documents/vngInterview/react-redux-crud-example/src/actions/products.js"],"names":["CREATE_PRODUCT","RETRIEVE_PRODUCTS","UPDATE_PRODUCT","ProductDataService","createProduct","title","price","description","category","image","quantity","dispatch","res","create","type","payload","data","Promise","resolve","err","reject","retrieveProducts","getAll","console","log","updateProduct","id","update"],"mappings":"AAAA,SACIA,cADJ,EAEIC,iBAFJ,EAGIC,cAHJ,QAIS,QAJT;AAME,OAAOC,kBAAP,MAA+B,6BAA/B;AAGA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CC,QAA7C,KAA0D,MAAOC,QAAP,IAAoB;AACzG,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAACU,MAAnB,CAA0B;AAAER,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA,QAA7B;AAAuCC,MAAAA,KAAvC;AAA8CC,MAAAA;AAA9C,KAA1B,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,cADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;AACD,GATD,CASE,OAAOG,GAAP,EAAY;AACZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;AACD;AACF,CAbM;AAgBP,OAAO,MAAME,gBAAgB,GAAG,MAAM,MAAOV,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAACmB,MAAnB,EAAlB;AAEAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,iBADC;AAEPc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD;AACF,CAXM;AAcP,OAAO,MAAMM,aAAa,GAAG,CAACC,EAAD,EAAKV,IAAL,KAAc,MAAOL,QAAP,IAAoB;AAC7D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,kBAAkB,CAACwB,MAAnB,CAA0BD,EAA1B,EAA8BV,IAA9B,CAAlB;AAEAL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,cADC;AAEPa,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACC,OAAR,CAAgBN,GAAG,CAACI,IAApB,CAAP;AACD,GATD,CASE,OAAOG,GAAP,EAAY;AACZ,WAAOF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAAP;AACD;AACF,CAbM","sourcesContent":["import {\n    CREATE_PRODUCT,\n    RETRIEVE_PRODUCTS,\n    UPDATE_PRODUCT\n  } from \"./type\";\n  \n  import ProductDataService from \"../services/product.service\";\n  \n  \n  export const createProduct = (title, price, description, category, image, quantity) => async (dispatch) => {\n    try {\n      const res = await ProductDataService.create({ title, price, description, category, image, quantity });\n  \n      dispatch({\n        type: CREATE_PRODUCT,\n        payload: res.data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  \n\n  export const retrieveProducts = () => async (dispatch) => {\n    try {\n      const res = await ProductDataService.getAll();\n  \n      dispatch({\n        type: RETRIEVE_PRODUCTS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n\n  export const updateProduct = (id, data) => async (dispatch) => {\n    try {\n      const res = await ProductDataService.update(id, data);\n  \n      dispatch({\n        type: UPDATE_PRODUCT,\n        payload: data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  \n\n  \n  "]},"metadata":{},"sourceType":"module"}